\documentclass{article}
\usepackage{enumitem}
\usepackage{ amssymb }
\usepackage{ textcomp }
\usepackage{longtable}
\usepackage{amsmath,tabu}
\usepackage{caption}
\usepackage{subcaption}
\usepackage{float}
\usepackage[figurename=Supplemental Figure]{caption}
\usepackage{titling}

\setlength{\droptitle}{-5em}  
\topmargin=-0.4in
\evensidemargin=0in
\oddsidemargin=0in
\textwidth=6.5in
\textheight=9in
\headsep=0.25in

\title{Interrogation of human hematopoietic traits at single-cell and single-variant resolution}
\date{Supplemental Information}
\author{(Caleb, Erik, Jacob), Will?, Hilary, Joel, (Martin, Jason, Vijay)}


\begin{document}
\maketitle
\section*{Overview of UK Biobank data}
\begin{enumerate}[label=(\Alph*)]
\item 
a

<<loadLibraries, message = FALSE, warning = FALSE, echo = FALSE, fig.height=5, fig.align='center', fig.pos='H', fig.width=8, eval = TRUE, cache = FALSE, results="hide">>=
library(corrplot)
library(BuenColors)
library(dplyr)
library(reshape2)
library(cowplot)
@

<<correlationPlots, message = FALSE, warning = FALSE, echo = FALSE, fig.height=5, fig.align='center', fig.pos='H', fig.width=8, fig.cap="Phenotypic and genetic correlations across the 16 traits examined. ", eval = TRUE, cache = TRUE, results="hide">>=

reorderedtraits=traits=c("BASO_COUNT","EO_COUNT","HCT","HGB","LYMPH_COUNT", "MCH", "MCHC", "MCV", "MEAN_RETIC_VOL","MONO_COUNT", "MPV", "NEUTRO_COUNT", "PLT_COUNT", "RBC_COUNT","RETIC_COUNT","WBC_COUNT")

########################################################################
### Phenotypic correlations
phenocors <-read.table("../data/phenotypeCorrelations/raw_phenotypes.txt",header=TRUE,row.names=1)
phenocors <- data.matrix(phenocors[reorderedtraits,reorderedtraits])
melt_pheno <- reshape2::melt(phenocors)
melt_pheno$Var1 <- ordered(as.character(melt_pheno$Var1),  ordered(traits))
melt_pheno$Var2 <- ordered(as.character(melt_pheno$Var2),  ordered(rev((traits))))

p1 <- ggplot(data = melt_pheno, aes(x=Var1, y=Var2, fill=value)) + pretty_plot() + 
  geom_tile() + scale_fill_gradientn(colors = jdb_palette("solar_flare"), limits = c(-1,1)) +
  theme(plot.subtitle = element_text(vjust = 1), 
    plot.caption = element_text(vjust = 1), 
    axis.text.x = element_text(angle = 90)) +labs(x = NULL, y = NULL, fill = "Pearson") +
  theme(legend.position="bottom")  + ggtitle("Phenotype Correlation")

################################################################################ 
#Constrained intercept genetic correlations
constrained_gencors <- vector(mode = "list", length = length(traits))

# Read unix files into R lists
constrained_gencors <- lapply(traits, function(y) read.table(paste0("../data/phenotypeCorrelations/ldscore/",y,"_UK10K_constrained.gcsummary.txt"),header=TRUE,row.names=NULL))

make.gc.matrix <- function(list_of_gcs,traits){
  allgencors <- bind_rows(list_of_gcs)
  allgencors$rg <- as.numeric(as.character(allgencors$rg))
  
  gc.matrix <- matrix(ncol = 16, nrow = 16, dimnames=list(traits,traits))
  pv.matrix <- matrix(ncol = 16, nrow = 16, dimnames=list(traits,traits))
  
  for (i in traits) {
    for (j in traits) {
      if (i == j){
        gc.matrix[i,j]=1
      } else {
        gc.matrix[i,j] <- allgencors[allgencors$p1 == i & allgencors$p2 == j,'rg']
        if (gc.matrix[i,j]>1) gc.matrix[i,j]=1
        pv.matrix[i,j]<- allgencors[allgencors$p1 == i & allgencors$p2 == j,'p']
      }
    }
  }
  return(list(gc.matrix,pv.matrix))
}


ldscorecor <- make.gc.matrix(constrained_gencors,traits)[[1]]
melt_phenoLD <- reshape2::melt(ldscorecor)
melt_phenoLD$Var1 <- ordered(as.character(melt_phenoLD$Var1),  ordered(traits))
melt_phenoLD$Var2 <- ordered(as.character(melt_phenoLD$Var2),  ordered(rev((traits))))

p2 <- ggplot(data = melt_phenoLD, aes(x=Var1, y=Var2, fill=value)) + pretty_plot() + 
  geom_tile() + scale_fill_gradientn(colors = jdb_palette("solar_flare"), limits = c(-1,1)) +
  theme(plot.subtitle = element_text(vjust = 1), 
    plot.caption = element_text(vjust = 1), 
    axis.text.x = element_text(angle = 90)) +labs(x = NULL, y = NULL, fill = "LDScore Correlation") +
  theme(legend.position="bottom")  + ggtitle("Genetic Correlation")


##########################################################################
#Compare geno and pheno correlations
phenotriangle <- phenocors
phenotriangle[lower.tri(phenotriangle, diag = FALSE)]<- 0
genotriangle <- ldscorecor
genotriangle[lower.tri(genotriangle, diag = FALSE)]<- 0

phenomelt <- melt(phenotriangle); genomelt <- melt(genotriangle); allmelt <- melt(phenocors)

genomelt$traitpairs <- paste(genomelt$Var1,genomelt$Var2)
phenomelt$traitpairs <- paste(phenomelt$Var1,phenomelt$Var2)

colnames(genomelt)[3]<- "GenoCor"
colnames(phenomelt)[3] <- "PhenoCor"
merged <- merge(genomelt,phenomelt,by="traitpairs")
merged[,c("Var1.x","Var2.x")] <- NULL
merged <- merged[merged$GenoCor != 0,]

p3 <- ggplot(merged,aes(x=GenoCor,y=PhenoCor,pairs=traitpairs)) + geom_point(aes(color=Var1.y)) + 
  scale_color_manual(values = UKBB_color_maps) + 
  pretty_plot()+ geom_smooth(method=lm)+
  geom_abline(intercept=0,slope=1) + 
  theme(plot.title = element_text(size=10,hjust = 0.5,face="bold"),
        panel.background = element_rect(fill = "white", colour = "grey50"),
        panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
  scale_x_continuous(limits = c(-1,1)) + scale_y_continuous(limits = c(-1,1))

 plot_grid(p1, p2, labels = c('A', 'B'))

@


<<heritabilityPlots, message = FALSE, warning = FALSE, echo = FALSE, fig.height=5, fig.align='center', fig.pos='H', fig.width=8, fig.cap="Heritiability estimates from LD Score Regression across 16 hematopoetic traits. The estimates of the narrow-sense SNP heritabilities are plotted with their corresponding standard erors.", eval = TRUE, cache = FALSE, results="hide">>=
 
############################################################################################################
# Narrow-Sense Heritability Estimates Obtained from Genetic Correlations

heritability <- data.frame(row.names=traits)
allgencors <- bind_rows(constrained_gencors)
nodups <- allgencors[!(duplicated(allgencors$p2)),]

for (i in traits){
  heritability[i,"h_obs"] <- nodups[nodups$p2 == i,'h2_obs']
  heritability[i,"h_obs_se"] <- nodups[nodups$p2 == i,'h2_obs_se']
}

heritability$trait <- rownames(heritability)
heritability$trait <- factor(heritability$trait,levels=reorderedtraits)

ggplot(data=heritability, aes(trait,h_obs)) +
  geom_bar(stat="identity",fill="steel blue") + ggtitle("Trait Heritability") + theme_bw() + 
  theme(plot.title = element_text(size=10,hjust = 0.5,face="bold"),
        panel.background = element_rect(fill = "white", colour = "grey50"),
        panel.grid.major = element_blank(), panel.grid.minor = element_blank(), 
        axis.title.y=element_blank(),axis.title.x=element_blank()) +
  scale_x_discrete(labels = abbreviate) +
          geom_errorbar(aes(ymin=h_obs-h_obs_se, ymax=h_obs+h_obs_se),
                        width=.2,position=position_dodge(.9),color="black")

@

<<barplots, message = FALSE, warning = FALSE, echo = FALSE, fig.height=9, fig.align='center', fig.pos='H', fig.width=8, fig.cap="Hematopoetic cell type enrichments for Mean Retic Volume and Monocyte count using various methods.", eval = TRUE, cache = FALSE, results="hide">>=
df3 <- read.table("../data/bulk/GWAS-Bulk/compare3.tsv", header = TRUE)
df3$LDScore <- -log10(df3$ldscore_pvalue)
df3$`g-chromVAR` <- -log10(pnorm(df3$weighted_Zscore, lower.tail = FALSE))
df3$chromVAR <- -log10(pnorm(df3$chromVAR_Zscore, lower.tail = FALSE))
plotdfEnrich2 <- reshape2::melt(df3[df3$Trait %in% c("MEAN_RETIC_VOL", "MONO_COUNT"),c(1,2,6,7,8)],
                                id.vars = c("Celltype", "Trait"))

pEnrich1 <- ggplot(plotdfEnrich2[plotdfEnrich2$Trait == "MONO_COUNT", ], aes(x = Celltype, y = value)) +
  geom_bar(width = 1, aes(fill = Celltype), colour="black",
           stat = "identity", position = position_dodge(width=1)) +
  pretty_plot() + labs(x = "", y = "Monocyte Count Enrichment (-log10 p)", fill = "") +
   scale_fill_manual(values = ejc_color_maps) + facet_grid(variable ~ ., scales = "free_y") +
  theme(legend.position="none") +
  theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank())

pEnrich2 <- ggplot(plotdfEnrich2[plotdfEnrich2$Trait == "MEAN_RETIC_VOL", ], aes(x = Celltype, y = value)) +
  geom_bar(width = 1, aes(fill = Celltype), colour="black",
           stat = "identity", position = position_dodge(width=1)) +
  pretty_plot() + labs(x = "", y = "Mean Retic Volume Enrichment (-log10 p)", fill = "") +
   scale_fill_manual(values = ejc_color_maps) + facet_grid(variable ~ ., scales = "free_y") +
  theme(legend.position="bottom") +
  theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank())

plot_grid(pEnrich1, pEnrich2, labels = c('A', 'B'), nrow = 2, rel_heights = c(1,1.3))
@

\item

\begin{figure}[H]
\centering
\includegraphics[width=\linewidth]{staticFigures/LDtoSentinel_PPcomparison.pdf}
\caption{Sample embedding of figure in document.}
\end{figure} 

\end{enumerate}


\end{document}